name: Validate Enterprise UI Components

on:
  push:
    branches: [main, develop]
    paths:
      - 'shared/ui-components-enterprise/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'shared/ui-components-enterprise/**'

jobs:
  validate:
    name: TypeScript, Build & Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: shared/ui-components-enterprise/package-lock.json

      - name: Install dependencies
        run: |
          cd shared/ui-components-enterprise
          npm ci

      - name: TypeScript check
        run: |
          cd shared/ui-components-enterprise
          npm run typecheck

      - name: Build
        run: |
          cd shared/ui-components-enterprise
          npm run build

      - name: Test
        run: |
          cd shared/ui-components-enterprise
          npm test

      - name: Lint
        run: |
          cd shared/ui-components-enterprise
          npm run lint

      - name: Check bundle size
        run: |
          cd shared/ui-components-enterprise
          npm run analyze

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: enterprise-ui-build-${{ matrix.node-version }}
          path: shared/ui-components-enterprise/dist/
          retention-days: 7

  compliance-check:
    name: Compliance Validation
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: shared/ui-components-enterprise/package-lock.json

      - name: Install dependencies
        run: |
          cd shared/ui-components-enterprise
          npm ci

      - name: Run compliance tests
        run: |
          cd shared/ui-components-enterprise
          npm run test:compliance

      - name: Generate compliance report
        run: |
          cd shared/ui-components-enterprise
          npm run generate:compliance-report

      - name: Upload compliance report
        uses: actions/upload-artifact@v4
        with:
          name: compliance-report
          path: shared/ui-components-enterprise/reports/compliance/
          retention-days: 30

  performance-check:
    name: Performance Validation
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: shared/ui-components-enterprise/package-lock.json

      - name: Install dependencies
        run: |
          cd shared/ui-components-enterprise
          npm ci

      - name: Run performance tests
        run: |
          cd shared/ui-components-enterprise
          npm run test:performance

      - name: Generate performance report
        run: |
          cd shared/ui-components-enterprise
          npm run generate:performance-report

      - name: Upload performance report
        uses: actions/upload-artifact@v4
        with:
          name: performance-report
          path: shared/ui-components-enterprise/reports/performance/
          retention-days: 30

  security-check:
    name: Security Validation
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: shared/ui-components-enterprise/package-lock.json

      - name: Install dependencies
        run: |
          cd shared/ui-components-enterprise
          npm ci

      - name: Run security audit
        run: |
          cd shared/ui-components-enterprise
          npm audit --audit-level=moderate

      - name: Run security tests
        run: |
          cd shared/ui-components-enterprise
          npm run test:security

      - name: Generate security report
        run: |
          cd shared/ui-components-enterprise
          npm run generate:security-report

      - name: Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: shared/ui-components-enterprise/reports/security/
          retention-days: 30

  publish:
    name: Publish Package
    runs-on: ubuntu-latest
    needs: [validate, compliance-check, performance-check, security-check]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          cache-dependency-path: shared/ui-components-enterprise/package-lock.json

      - name: Install dependencies
        run: |
          cd shared/ui-components-enterprise
          npm ci

      - name: Build
        run: |
          cd shared/ui-components-enterprise
          npm run build

      - name: Publish to npm
        run: |
          cd shared/ui-components-enterprise
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Enterprise UI Components v${{ github.run_number }}
          body: |
            ## Enterprise UI Components Release

            ### Features
            - ISO27001, GDPR, SOC2, HIPAA compliance
            - Performance optimization with virtualization
            - Zero-trust security architecture
            - WCAG 2.1 AA accessibility

            ### Changes
            - Automated build and test validation
            - Compliance and security reports
            - Performance benchmarking

            ### Installation
            ```bash
            npm install @aibos/ui-enterprise
            ```
          draft: false
          prerelease: false
