/**
 * Type guards for runtime validation
 * Auto-generated by Professional Recovery System
 */

export function isValidObject(obj: any): obj is Record<string, any> {
  return obj && typeof obj === 'object' && !Array.isArray(obj);
}

export function hasRequiredProperty<T extends Record<string, any>>(
  obj: any,
  property: keyof T,
): obj is T {
  return isValidObject(obj) && property in obj && obj[property] !== undefined;
}

export function isStringArray(value: any): value is string[] {
  return Array.isArray(value) && value.every((item) => typeof item === 'string');
}
